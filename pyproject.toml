[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fuzzy-json-repair"
version = "0.1.4"
description = "Fix typos in JSON keys using fuzzy matching with RapidFuzz"
readme = "README.md"
authors = [
    { name = "Sayef", email = "hello@sayef.tech" }
]
license = { text = "MIT" }
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
    "Typing :: Typed",
]
keywords = ["json", "repair", "fuzzy", "matching", "typo", "pydantic", "validation", "llm"]

dependencies = [
    "rapidfuzz>=3.0.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
fast = [
    "numpy>=1.20.0",  # For cdist batch processing
]
syntax = [
    "json-repair>=0.7.0",  # For JSON syntax repair
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "bump2version>=1.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/sayef/fuzzy-json-repair"
Documentation = "https://github.com/sayef/fuzzy-json-repair#readme"
Repository = "https://github.com/sayef/fuzzy-json-repair"
Issues = "https://github.com/sayef/fuzzy-json-repair/issues"

[tool.setuptools]
packages = ["fuzzy_json_repair"]

[tool.setuptools.package-data]
fuzzy_json_repair = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=fuzzy_json_repair --cov-report=term-missing"

[tool.black]
line-length = 100
target-version = ["py311", "py312"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = false

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "SIM"]
ignore = []
